{"version":3,"sources":["context/types.js","context/AppReducer.js","context/AppContext.js","context/AppState.js","components/NavBar.js","components/ErrorMessage.js","components/Message.js","components/ListMessages.js","components/SendMessage.js","components/App.js","index.js"],"names":["GET_MESSAGES","SEND_MESSAGE","CLEAR_MESSAGES","SET_ERROR","CLEAR_ERROR","SET_LOADING","SET_OPERATION","AppReducer","state","action","console","log","type","messages","payload","loading","error","operation","appContext","createContext","NODE_ENV","process","REACT_APP_SERVER_URL","SERVER_URL","window","BACKEND_URL","AppState","props","useReducer","appReducer","dispatch","getMessages","a","setLoading","axios","get","resp","data","response","setError","msg","message","sendMessage","post","headers","clearMessages","delete","setTimeout","clearError","AppContext","Provider","value","setOperation","children","NavBar","useState","selectedTab","setSelectedTab","Nav","variant","defaultActiveKey","activeKey","onSelect","selectedKey","Item","Link","eventKey","as","to","href","ErrorMessage","useContext","Alert","style","marginTop","Message","info","date","ListMessages","useEffect","Button","onClick","e","length","map","position","SendMessage","setMessage","Form","onSubmit","preventDefault","Group","controlId","Label","Control","placeholder","name","onChange","target","htmlSize","size","required","App","margin","exact","path","render","routeParams","dotenv","config","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5851d4d4.chunk.js","sourcesContent":["export const GET_MESSAGES = 'GET_MESSAGES';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_OPERATION = 'SET_OPERATION';","import {GET_MESSAGES, SEND_MESSAGE, CLEAR_MESSAGES, SET_ERROR, CLEAR_ERROR, SET_LOADING, SET_OPERATION} from './types';\r\n\r\nconst AppReducer = (state, action) => {\r\n    console.log('state: ', state, ', action: ', action);\r\n    \r\n    switch ( action.type ) {\r\n        case GET_MESSAGES: \r\n            return {...state, messages: action.payload, loading: false };\r\n        case SEND_MESSAGE:\r\n            return { ...state, loading: false };\r\n        case CLEAR_MESSAGES:\r\n            return {...state, messages: action.payload, loading: false };\r\n        case SET_ERROR:\r\n            return {...state, loading: false, error: action.payload};\r\n        case CLEAR_ERROR:\r\n            return {...state, error: null};\r\n        case SET_LOADING:\r\n            return {...state, loading: true};\r\n        case SET_OPERATION:\r\n            return {...state, operation: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AppReducer;","import { createContext } from 'react';\r\n\r\nconst appContext = createContext();\r\n\r\nexport default appContext;","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {GET_MESSAGES, SEND_MESSAGE, CLEAR_MESSAGES, SET_ERROR, CLEAR_ERROR, SET_LOADING, SET_OPERATION} from './types';\r\nimport appReducer from './AppReducer';\r\nimport AppContext from './AppContext';\r\n\r\nconst NODE_ENV = process.env.NODE_ENV ? process.env.NODE_ENV: 'development';\r\nconsole.log('NODE_ENV: ', NODE_ENV);\r\n\r\nconst {REACT_APP_SERVER_URL} = process.env;\r\nconst {SERVER_URL} = window;\r\nconsole.log('REACT_APP_SERVER_URL: ', REACT_APP_SERVER_URL);\r\nconsole.log('SERVER_URL: ', SERVER_URL);\r\n\r\nconst BACKEND_URL = NODE_ENV === 'development' ? REACT_APP_SERVER_URL : SERVER_URL;\r\nconsole.log('Backend URL: ', BACKEND_URL);\r\n\r\nconst AppState = (props) => {\r\n  const INITIAL_STATE = {\r\n    messages: [],\r\n    loading: false,\r\n    error: null,\r\n    operation: '/messages'\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(appReducer, INITIAL_STATE);\r\n\r\n  const getMessages = async () => {\r\n    console.log(\"Get messages..\");\r\n\r\n    setLoading();\r\n\r\n    try {\r\n        console.log(`Get messages from ${BACKEND_URL}`);\r\n        const resp = await axios.get(`${BACKEND_URL}`, {});\r\n        const data = resp.data;\r\n        console.log(data);\r\n\r\n        dispatch({type: GET_MESSAGES, payload: data});\r\n    } catch(error) {\r\n        console.error(error);\r\n        console.error(error.response);\r\n        setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (message) => {\r\n    console.log(\"Send message \", message);\r\n\r\n    setLoading();\r\n\r\n    try {\r\n        console.log(`Send message to ${BACKEND_URL}`);\r\n        const resp = await axios.post(`${BACKEND_URL}`, message, {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n        const data = resp.data;\r\n        console.log(data);\r\n\r\n        dispatch({type: SEND_MESSAGE, payload: data});\r\n    } catch(error) {\r\n        console.error(error);\r\n        console.error(error.response);\r\n        setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  const clearMessages = async () => {\r\n    console.log(\"Clear messages... \");\r\n\r\n    setLoading();\r\n\r\n    try {\r\n\r\n        const resp = await axios.delete(`${BACKEND_URL}`, {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n        const data = resp.data;\r\n        console.log(data);\r\n\r\n        dispatch({type: CLEAR_MESSAGES, payload: data});\r\n    } catch(error) {\r\n        console.error(error);\r\n        console.error(error.response);\r\n        setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  const setError = (error) => {\r\n    dispatch({ type: SET_ERROR, payload: error});\r\n\r\n    setTimeout( () => clearError(), 5000);\r\n  }\r\n\r\n  const clearError = () => {\r\n      dispatch({type: CLEAR_ERROR});\r\n  }\r\n\r\n  const setLoading = () => {\r\n      dispatch({type: SET_LOADING});\r\n  }\r\n\r\n  const setOperation = (operation) => {\r\n    dispatch({type: SET_OPERATION, payload: operation});\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        messages: state.messages,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        operation: state.operation,\r\n        getMessages,\r\n        sendMessage,\r\n        clearMessages,\r\n        setOperation,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppState;\r\n","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n// const NavBar = (props) => {\r\n//     return (\r\n//         <div>\r\n//             <Link to=\"/messages\">Messages</Link>\r\n//             <Link to=\"/send\">Send message</Link>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nconst NavBar = (props) => {\r\n  const [selectedTab, setSelectedTab] = useState(\"/messages\");\r\n\r\n  const selectTab = (selectedKey) => {\r\n    console.log('select tab ', selectedKey);\r\n    setSelectedTab(selectedKey);\r\n  };\r\n\r\n  return (\r\n    <Nav\r\n      variant=\"tabs\"\r\n      defaultActiveKey=\"/messages\"\r\n      activeKey={selectedTab}\r\n      onSelect={selectTab}\r\n    >\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"/messages\" as=\"div\">\r\n          <Link to=\"/messages\">Messages</Link>\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"/send\" as=\"div\" href=\"/send\">\r\n          <Link to=\"/send\">Send message</Link>\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React, {useContext} from 'react';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport appContext from '../context/AppContext';\r\n\r\nconst ErrorMessage = () => {\r\n    const {error} = useContext(appContext);\r\n\r\n    return (\r\n      error && \r\n      (\r\n        <Alert variant=\"danger\" style={{marginTop:'50px'}}>\r\n          {error}\r\n        </Alert>\r\n      )\r\n      // (\r\n      //   <div className={`alert alert-danger`}>\r\n      //     <i className=\"fas fa-info-cicle\"></i> {error}\r\n      //   </div>\r\n      // )\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n    const { info } = props;\r\n\r\n    return (\r\n        <div>{info.date} - {info.value}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, {useContext, useEffect} from 'react'; \r\nimport Button from 'react-bootstrap/Button'\r\nimport Message from './Message';\r\n\r\nimport appContext from '../context/AppContext';\r\n\r\nconst ListMessages = () => {\r\n    const {messages, getMessages, clearMessages, loading} = useContext(appContext);\r\n\r\n    useEffect(\r\n      () => getMessages(),\r\n      // eslint-disable-next-line\r\n      []\r\n    );\r\n\r\n    console.log('Messages are: ', messages);\r\n\r\n    // if ( loading || ! Array.isArray(messages) ) {\r\n    if ( loading ) {\r\n      return (\r\n        <div style={{marginTop:'50px'}}>\r\n          Loading messages...\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={{marginTop:'50px'}}>\r\n            {/* <button onClick={( e => getMessages())}>Refresh</button>\r\n            <button onClick={ e => clearMessages()}>Clear</button> */}\r\n            <Button variant=\"primary\" onClick={( e => getMessages())}>Refresh</Button>{' '}\r\n            <Button variant=\"secondary\" onClick={( e => clearMessages())}>Clear</Button>{' '}\r\n            <div style={{marginTop:'30px'}}>\r\n            { messages && messages.length ? \r\n                ( \r\n                    messages.map( msg => ( <Message key={msg.position} info={msg} /> ) )\r\n                  )\r\n                :\r\n              'No messages.'\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListMessages;","import React, { useState, useContext } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport appContext from '../context/AppContext';\r\n\r\nconst SendMessage = () => {\r\n    const [message, setMessage] = useState('');\r\n    const { loading, sendMessage } = useContext(appContext);\r\n\r\n    const onChange = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const msg = {message: message}\r\n\r\n        sendMessage(msg);\r\n\r\n        setMessage('');\r\n    }\r\n\r\n    if ( loading ) {\r\n      return (\r\n        <div  style={{marginTop:'50px'}}>\r\n          Sending message...\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      // <div>\r\n      //     Message to send\r\n      //     <form onSubmit={onSubmit}>\r\n      //         <input type=\"text\" name=\"message\" value={message} onChange={onChange} />\r\n      //         <button>Send</button>\r\n      //     </form>\r\n      // </div>\r\n\r\n      <Form onSubmit={onSubmit} style={{marginTop:'50px'}}>\r\n        <Form.Group controlId=\"formBasicSendMessage\">\r\n          <Form.Label>Message to send</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter a new message\"\r\n            name=\"message\"\r\n            value={message}\r\n            onChange={onChange}\r\n            htmlSize=\"50\"\r\n            size=\"sm\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Send\r\n        </Button>\r\n      </Form>\r\n    );\r\n}\r\n\r\nexport default SendMessage;","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\n\nimport AppState from '../context/AppState';\nimport NavBar from './NavBar';\nimport ErrorMessage from './ErrorMessage';\nimport ListMessages from './ListMessages';\nimport SendMessage from './SendMessage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App(props) {\n  return (\n    <AppState>\n      <BrowserRouter>\n        <div style={{ margin: \"50px\" }}>\n          <NavBar />\n          <ErrorMessage />\n          <Switch>\n            <Route\n              exact\n              path=\"/messages\"\n              render={(routeParams) => <ListMessages {...routeParams} />}\n            ></Route>\n            <Route\n              exact\n              path=\"/send\"\n              render={(routeParams) => <SendMessage {...routeParams} />}\n            ></Route>\n            <Redirect to=\"/messages\" />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </AppState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nimport dotenv from 'dotenv';\n\nimport './index.css';\n\ndotenv.config();\n// console.log('Process Env: ', process.env);\nconsole.log('Server: ', process.env.REACT_APP_SERVER_URL);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}